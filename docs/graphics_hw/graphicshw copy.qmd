---
title: "Graphics_Homework"
author: "Ethan Pisterman"
output:
  html_document:
    toc: true
    toc_depth: 2
---

```{r}
library(dplyr)
library(lubridate)
library(ggplot2)
source("/Users/ethanpisterman/Desktop/ENVS  543/ENVS543/get_rice_data.R")
url.data <- get_rice_data()
```

# **Total Rain for Each Weekday in January**

### Create Query for January

```{r}
january <- url.data %>%
  filter(month(Date) == 1) %>%
  group_by(Weekday) %>%
  summarise(total_rain_mm = sum(Rain_mm,
                                na.rm = TRUE))
```

### Basic Plot

```{r}
barplot(january$total_rain_mm,
        names.arg = abbreviate(january$Weekday,
                               minlength = 1),
        main = "Total Rain for Each Weekday in January",
        ylab = "Total Rain (mm)")
```

### ggplot2

```{r}
ggplot(january,
       aes(x = Weekday,
           y = total_rain_mm)) +
  geom_bar(stat = "identity",
           fill = "grey",
           color = "black",
           width = 0.7) +
  labs(title = "Total Rain for Each Weekday in January",
       x = "Day of the Week", 
       y = "Total Rain (mm)") +
  theme_minimal() +
  theme(axis.text.x = element_text(size = 12,
                                   color = "blue",
                                   angle = 0,
                                   hjust = 0.5)) +
  scale_x_discrete(labels = substr(january$Weekday, 1, 1))
```

# *AVG Daily Temp for Weekdays in February*

### Create February Dataframe

```{r}
feb <- url.data %>%
  filter(month(Date) == 2) %>%
  group_by(Weekday) %>%
  summarize(avg_temp = mean(AirTempC, na.rm = TRUE),
            sd_temp = sd(AirTempC, na.rm = TRUE))
```

### Basic Plot

```{r}
barplot(feb$avg_temp,
        names.arg = abbreviate(feb$Weekday,
                               minlength = 1),
        main = "Mean Temp. (C) for Each Weekday in Feburary",
        ylab = "Total Rain (mm)")
```

### ggplot2

```{r}
ggplot(feb, aes(x = Weekday,
                y = avg_temp)) +
  geom_bar(stat = "identity",
           fill = "skyblue") +
  geom_errorbar(aes(ymin = avg_temp - sd_temp,
                    ymax = avg_temp + sd_temp),
                width = 0.2,
                color = "black") +
  labs(title = "Average Daily Temperature \nfor Weekdays in February with SE Bars",
       x = "Weekday",
       y = "Average Temperature (째C)") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45,
                                   hjust = 1))  
```

# *Water depth on Valentine's Day*

### Create Valentines Dataframe

```{r}
valentines_day_data <- url.data %>%
  filter(month(Date) == 2 & day(Date) == 14)
```

### Basic Plot

```{r}
valentines_day_data$Time <- as.POSIXct(valentines_day_data$Time,format = "%H:%M") 
plot(valentines_day_data$Time, valentines_day_data$Depth_m,
     xaxt = 'n',
     main = "Water Depth Throughout Valentines Day",
     xlab = "Time (HH:MM)",
     ylab = "Water Depth (m)",
     col = "blue") 
axis.POSIXct(1, at = valentines_day_data$Time,
             format = "%H:%M",
             las = 2)
```

### ggplot2

```{r}
ggplot(valentines_day_data, aes(x = Time, y = Depth_m)) +
  geom_smooth(color = "blue",
              linewidth = 1,
              alpha = 1) + 
  geom_point(color = "red",
             size = .5) + 
  labs(title = "Water Depth Throughout Valentine's Day",
       x = "Time (HH:MM)",
       y = "Water Depth (m)") +
  scale_x_datetime(date_labels = "%H:%M",
                   date_breaks = "1 hour") +  
  theme_minimal() +  
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

# *Scatter plot of Daily Total Rain and Daily Median Temp, grouped by month*

### Create Dataframe

```{r}
grouped_data <- url.data %>%
  group_by(month = month(Date, label = TRUE, abbr = TRUE)) %>%
  reframe(total_rain = sum(Rain_mm, na.rm = TRUE),
          median_temp = median(AirTempC, na.rm = TRUE))
```

### Basic Plot

```{r}
plot(url.data$AirTempC, url.data$Rain_mm, 
     main = "Scatter Plot of \nDaily Total Rain vs. Median Temperature",
     xlab = "Daily Median Temperature (째C)", 
     ylab = "Daily Total Rain (mm)",
     col = as.factor(month(url.data$Date, label = TRUE, abbr = TRUE)),
     pch = 19) 
     
```

### ggplot2

```{r}
ggplot(url.data, aes(x = AirTempC,
                     y = Rain_mm,
                     color = factor(month(Date, label = TRUE, abbr = TRUE)))) +
  geom_point(size = 3,
             alpha = 0.7) +
  labs(title = "Scatter Plot of Daily Total Rain vs. Median Temperature",
       x = "Daily Median Temperature (째C)",
       y = "Daily Total Rain (mm)",
       color = "Month") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45,
                                   hjust = 1))
```

# *Wind direction during the week containing the 8th of January*

### Filter Data

```{r}
january_8th <- url.data %>%
  filter(Date >= as.Date("2014-01-05") & Date <= as.Date("2014-01-12"))

set.seed(123)
wind.data <- data.frame(
  wind_dir =  january_8th$WindDir,
  weekday = january_8th$Weekday)
```

### Basic Plot

```{r}
boxplot(WindDir ~ Weekday, data = january_8th,
        main = "Boxplot of Wind Direction by Weekday",
        xlab = "Weekday",
        ylab = "Air Temperature (째C)")
    
```

### ggplot2

```{r}
direction_count <- wind.data %>%
  group_by(direction = cut(wind_dir,
                           breaks = seq(0, 360, by = 10),
                           right = FALSE), weekday) %>%
  summarize(count = n()) 
  
ggplot(direction_count, aes(x = direction,
                            y = count,
                            fill = weekday)) +
  geom_bar(stat = "identity",
           position = "stack") +
  scale_x_discrete(labels = c("N", "E", "S", "W")) +
  coord_polar(start = 0) +
  labs(title = "Polar Bar Chart of Wind Direction \nby Weekday in Week of January 8th",
       x = "Wind Direction (10-degree bins)",
       y = "Frequency") +
  scale_fill_brewer(palette = "Set3") +
  theme_minimal() +
  theme(axis.text.x = element_blank())
```
